
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(error = recover)
> set.seed(15331)
> library(intamap)
Loading required package: sp
> library(automap)
> library(gstat)
> library(psgp)
> #loadMeuse()
> 
> sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 16299)

Matrix products: default

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] psgp_0.3-8     gstat_1.1-5    automap_1.0-14 intamap_1.4-7  sp_1.2-5      

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.14      codetools_0.2-15  lattice_0.20-35   intervals_0.15.1 
 [5] mvtnorm_1.0-6     FNN_1.1           reshape_0.8.7     spacetime_1.2-1  
 [9] zoo_1.8-0         foreach_1.4.3     MASS_7.3-47       grid_3.4.3       
[13] plyr_1.8.4        doParallel_1.0.11 xts_0.10-0        rgdal_1.2-16     
[17] iterators_1.0.8   parallel_3.4.3    compiler_3.4.3    evd_2.3-2        
> 
> crs = CRS("+init=epsg:28992 +proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725 +units=m +no_defs")
> data("meuse")
> coordinates(meuse) <- ~x+y
> proj4string(meuse) <- crs
> data("meuse.grid")
> coordinates(meuse.grid) <- ~x+y
> gridded(meuse.grid) <- TRUE
> proj4string(meuse.grid) <- crs
> 
> meuse$value = log(meuse$zinc)
> meuse.grid = meuse.grid[sample(1:dim(meuse.grid)[1], 100),]
> output = interpolate(meuse, meuse.grid, list(mean=T, variance=T, nsim = 5), methodName = "automap")
R 2018-02-21 16:34:13 interpolating 155 observations, 100 prediction locations
Checking object ... OK
Warning message:
In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
> summary(t(output$outputTable), digits = 4)
       x                y               mean          variance     
 Min.   :178500   Min.   :329620   Min.   :4.804   Min.   :0.0778  
 1st Qu.:179290   1st Qu.:330220   1st Qu.:5.202   1st Qu.:0.1243  
 Median :179820   Median :330780   Median :5.485   Median :0.1445  
 Mean   :179850   Mean   :331028   Mean   :5.670   Mean   :0.1677  
 3rd Qu.:180280   3rd Qu.:331780   3rd Qu.:6.138   3rd Qu.:0.1917  
 Max.   :181460   Max.   :333620   Max.   :7.321   Max.   :0.4220  
      sim1            sim2            sim3            sim4      
 Min.   :4.464   Min.   :4.149   Min.   :4.287   Min.   :4.008  
 1st Qu.:5.240   1st Qu.:5.115   1st Qu.:5.089   1st Qu.:5.320  
 Median :5.639   Median :5.575   Median :5.663   Median :5.756  
 Mean   :5.742   Mean   :5.645   Mean   :5.644   Mean   :5.771  
 3rd Qu.:6.257   3rd Qu.:6.099   3rd Qu.:6.162   3rd Qu.:6.124  
 Max.   :7.462   Max.   :7.346   Max.   :7.753   Max.   :7.625  
      sim5      
 Min.   :3.866  
 1st Qu.:5.283  
 Median :5.840  
 Mean   :5.817  
 3rd Qu.:6.255  
 Max.   :8.018  
> 
> output = interpolate(meuse, meuse.grid,
+     optList = list(idpRange = seq(0.1, 2.9, 0.5), nfold = 3), 
+     outputWhat = list(mean=TRUE), methodName = "idw")
R 2018-02-21 16:34:14 interpolating 155 observations, 100 prediction locations
Checking object ... OK
[1] "best idp value found is 2.6 rmse 0.460976071935718"
Warning message:
In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
> summary(t(output$outputTable), digits = 4)
       x                y               mean      
 Min.   :178500   Min.   :329620   Min.   :4.863  
 1st Qu.:179290   1st Qu.:330220   1st Qu.:5.315  
 Median :179820   Median :330780   Median :5.574  
 Mean   :179850   Mean   :331028   Mean   :5.685  
 3rd Qu.:180280   3rd Qu.:331780   3rd Qu.:6.093  
 Max.   :181460   Max.   :333620   Max.   :7.114  
> 
> 
> output = interpolate(meuse, meuse.grid, list(mean=T, variance=T),methodName = "transGaussian")
R 2018-02-21 16:34:15 interpolating 155 observations, 100 prediction locations
Checking object ... OK
Warning message:
In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
> summary(t(output$outputTable), digits = 4)
       x                y               mean          variance      
 Min.   :178500   Min.   :329620   Min.   :4.811   Min.   :0.06306  
 1st Qu.:179290   1st Qu.:330220   1st Qu.:5.217   1st Qu.:0.10706  
 Median :179820   Median :330780   Median :5.493   Median :0.12807  
 Mean   :179850   Mean   :331028   Mean   :5.660   Mean   :0.14978  
 3rd Qu.:180280   3rd Qu.:331780   3rd Qu.:6.113   3rd Qu.:0.17678  
 Max.   :181460   Max.   :333620   Max.   :7.376   Max.   :0.34441  
> 
> 
> set.seed(15331)
> data(meuse)
> meuse = meuse[sample(dim(meuse)[1],30),]
> meuse$value=meuse$zinc
> coordinates(meuse) = ~x+y
> mgrid = spsample(meuse,10,"regular")
> gridded(mgrid) = TRUE
> output1 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5),
+                      methodName = "copula")
R 2018-02-21 16:34:17 interpolating 30 observations, 12 prediction locations
Checking object ... OK
There were 50 or more warnings (use warnings() to see the first 50)
> 
> output2 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5),
+                      methodName = "copula",optList = list(methodParameters = output1$methodParameters))
R 2018-02-21 16:34:22 interpolating 30 observations, 12 prediction locations
Checking object ... OK
There were 50 or more warnings (use warnings() to see the first 50)
> 
> output3 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5),
+                      methodName = "automap",optList = list(model = c("Exp", "Sph")), cv = TRUE)
R 2018-02-21 16:34:23 interpolating 30 observations, 12 prediction locations
Checking object ... OK
Warning message:
In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
> 
> output4 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5),
+                       methodName = "psgp", cv = TRUE)
R 2018-02-21 16:34:23 interpolating 30 observations, 12 prediction locations
Checking object ... OK
Range: 2454.542191
Sill: 347123.595613
Nugget: 6443.708980
Bias: 0.002455
No noise model specified
Defaulting to GAUSSIAN with variance 64.437090
Processing observation: 1/30Processing observation: 2/30Processing observation: 3/30Processing observation: 4/30Processing observation: 5/30Processing observation: 6/30Processing observation: 7/30Processing observation: 8/30Processing observation: 9/30Processing observation: 10/30Processing observation: 11/30Processing observation: 12/30Processing observation: 13/30Processing observation: 14/30Processing observation: 15/30Processing observation: 16/30Processing observation: 17/30Processing observation: 18/30Processing observation: 19/30Processing observation: 20/30Processing observation: 21/30Processing observation: 22/30Processing observation: 23/30Processing observation: 24/30Processing observation: 25/30Processing observation: 26/30Processing observation: 27/30Processing observation: 28/30Processing observation: 29/30Processing observation: 30/30Processing observation: 1/30Processing observation: 2/30Processing observation: 3/30Processing observation: 4/30Processing observation: 5/30Processing observation: 6/30Processing observation: 7/30Processing observation: 8/30Processing observation: 9/30Processing observation: 10/30Processing observation: 11/30Processing observation: 12/30Processing observation: 13/30Processing observation: 14/30Processing observation: 15/30Processing observation: 16/30Processing observation: 17/30Processing observation: 18/30Processing observation: 19/30Processing observation: 20/30Processing observation: 21/30Processing observation: 22/30Processing observation: 23/30Processing observation: 24/30Processing observation: 25/30Processing observation: 26/30Processing observation: 27/30Processing observation: 28/30Processing observation: 29/30Processing observation: 30/30Covariance function : Sum
+ Component: 1
   Covariance function : Isotropic Exponential
   Range  (P0) :2454.542191
   Variance  (P1) :347123.595613
+ Component: 2
   Covariance function : Matern 5/2 covariance function
   Length scale  (P0) :2454.542191
   Variance  (P1) :347123.595613
+ Component: 3
   Covariance function : Constant
   Amplitude  (P0) :0.002455
+ Component: 4
   Covariance function : White noise
   Variance  (P0) :6443.708980
Finding optimal parametersCycle 1   Error 205.939614  Scale 1.000000
Cycle 2   Error 205.393077  Scale 0.500000
Cycle 3   Error 205.314162  Scale 0.250000
Cycle 4   Error 204.864773  Scale 0.125000
Cycle 5   Error 204.811236  Scale 0.062500
Warning: Maximum number of iterations has been exceeded
Cycle 1   Error 204.782280  Scale 1.000000
Cycle 2   Error 204.487821  Scale 0.500000
Cycle 3   Error 204.463454  Scale 0.250000
Cycle 4   Error 204.242752  Scale 0.125000
Cycle 5   Error 204.203175  Scale 0.062500
Warning: Maximum number of iterations has been exceeded
Cycle 1   Error 204.196422  Scale 1.000000
Cycle 2   Error 204.177304  Scale 0.500000
Cycle 3   Error 204.175019  Scale 0.250000
Cycle 4   Error 204.146334  Scale 0.125000
Cycle 5   Error 204.141868  Scale 0.062500
Warning: Maximum number of iterations has been exceeded
Warning message:
In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
> 
> output5 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5), cv = TRUE, methodName = "automap")
R 2018-02-21 16:34:24 interpolating 30 observations, 12 prediction locations
Checking object ... OK
Warning message:
In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
> output6 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5), optList = list(variogramModel = output5$variogramModel),
+                       cv = TRUE)
R 2018-02-21 16:34:25 interpolating 30 observations, 12 prediction locations
Checking object ... OK
Warning messages:
1: In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
2: In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  Could not find time model for method spatialPredict_automatic
3: In interpolate(meuse, mgrid, list(mean = T, variance = T, excprob = 1000,  :
  was not able to estimate prediction time for methodName automatic
> output6$variogramModel$range[2] = 1000
> output7 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5), 
+                       cv = TRUE, optList = list(variogramModel = output6$variogramModel))
R 2018-02-21 16:34:25 interpolating 30 observations, 12 prediction locations
Checking object ... OK
Warning messages:
1: In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
2: In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  Could not find time model for method spatialPredict_automatic
3: In interpolate(meuse, mgrid, list(mean = T, variance = T, excprob = 1000,  :
  was not able to estimate prediction time for methodName automatic
> output8 = interpolate(meuse, mgrid, list(mean=T, variance=T, excprob = 1000,quantile = 0.5), 
+                       cv = TRUE, optList = list(nclus = 4), methodName = "automap")
R 2018-02-21 16:34:25 interpolating 30 observations, 12 prediction locations
Checking object ... OK
Warning messages:
1: In predictTime(nObs = dim(observations)[1], nPred = dim(coordinates(predictionLocations))[1],  :
  
 using standard model for estimating time. For better 
 platform spesific predictions, please run 
 timeModels <- generateTimeModels()
  and save the workspace
2: In predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x else if (is.data.frame(newdata)) as.matrix(model.frame(delete.response(terms(object)),  :
  pseudoinverse used at 30
3: In predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x else if (is.data.frame(newdata)) as.matrix(model.frame(delete.response(terms(object)),  :
  neighborhood radius 1970
4: In predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x else if (is.data.frame(newdata)) as.matrix(model.frame(delete.response(terms(object)),  :
  reciprocal condition number  0
5: In predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x else if (is.data.frame(newdata)) as.matrix(model.frame(delete.response(terms(object)),  :
  at  0.014316 0.0017603
6: In predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x else if (is.data.frame(newdata)) as.matrix(model.frame(delete.response(terms(object)),  :
  radius  8.8115
7: In predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x else if (is.data.frame(newdata)) as.matrix(model.frame(delete.response(terms(object)),  :
  all data on boundary of neighborhood. make span bigger
> 
> all.equal(output5$predictions, output6$predictions) # Should be the same
[1] TRUE
> all.equal(output5$predictions, output8$predictions) # Should be the same
[1] TRUE
> all.equal(output5$predictions, output7$predictions)  # Should be different
[1] "Attributes: < Component \"data\": Component \"var1.pred\": Mean relative difference: 0.1812176 >"
[2] "Attributes: < Component \"data\": Component \"var1.var\": Mean relative difference: 2.702269 >"  
[3] "Attributes: < Component \"data\": Component \"residual\": Mean relative difference: 0.423019 >"  
[4] "Attributes: < Component \"data\": Component \"zscore\": Mean relative difference: 0.6659977 >"   
> 
> 
> summary(t(output$outputTable), digits = 4)
       x                y               mean          variance      
 Min.   :178500   Min.   :329620   Min.   :4.811   Min.   :0.06306  
 1st Qu.:179290   1st Qu.:330220   1st Qu.:5.217   1st Qu.:0.10706  
 Median :179820   Median :330780   Median :5.493   Median :0.12807  
 Mean   :179850   Mean   :331028   Mean   :5.660   Mean   :0.14978  
 3rd Qu.:180280   3rd Qu.:331780   3rd Qu.:6.113   3rd Qu.:0.17678  
 Max.   :181460   Max.   :333620   Max.   :7.376   Max.   :0.34441  
> 
> output2$outputTable - output1$outputTable
            [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
x              0    0    0    0    0    0    0    0    0     0     0     0
y              0    0    0    0    0    0    0    0    0     0     0     0
mean           0    0    0    0    0    0    0    0    0     0     0     0
variance       0    0    0    0    0    0    0    0    0     0     0     0
excprob1000    0    0    0    0    0    0    0    0    0     0     0     0
quantile0.5    0    0    0    0    0    0    0    0    0     0     0     0
attr(,"transposed")
[1] TRUE
> 
> summary(output3$predictions, digits = 4)
Object of class SpatialPointsDataFrame
Coordinates:
     min    max
x 178605 181352
y 329714 333252
Is projected: NA 
proj4string : [NA]
Number of points: 30
Data attributes:
   var1.pred         var1.var         observed         residual      
 Min.   : 98.05   Min.   : 13359   Min.   : 119.0   Min.   :-282.03  
 1st Qu.:220.53   1st Qu.: 24684   1st Qu.: 170.2   1st Qu.:-100.03  
 Median :331.42   Median : 30544   Median : 232.5   Median : -36.15  
 Mean   :371.21   Mean   : 34510   Mean   : 407.3   Mean   :  36.12  
 3rd Qu.:504.40   3rd Qu.: 37104   3rd Qu.: 552.0   3rd Qu.:  88.24  
 Max.   :985.03   Max.   :108562   Max.   :1672.0   Max.   :1333.04  
     zscore        
 Min.   :-1.54120  
 1st Qu.:-0.53970  
 Median :-0.17996  
 Mean   : 0.07466  
 3rd Qu.: 0.55992  
 Max.   : 4.04579  
> summary(output4$predictions, digits = 4)
Object of class SpatialPointsDataFrame
Coordinates:
     min    max
x 178605 181352
y 329714 333252
Is projected: NA 
proj4string : [NA]
Number of points: 30
Data attributes:
   var1.pred          var1.var         observed         residual        
 Min.   :  71.73   Min.   :  2029   Min.   : 119.0   Min.   :-374.0992  
 1st Qu.: 183.77   1st Qu.:  8865   1st Qu.: 170.2   1st Qu.: -50.1979  
 Median : 291.66   Median : 13955   Median : 232.5   Median :  -0.0599  
 Mean   : 351.31   Mean   : 26301   Mean   : 407.3   Mean   :  56.0221  
 3rd Qu.: 509.85   3rd Qu.: 24385   3rd Qu.: 552.0   3rd Qu.:  94.8679  
 Max.   :1077.10   Max.   :212927   Max.   :1672.0   Max.   :1136.5524  
     zscore       
 Min.   :-2.7364  
 1st Qu.:-0.4616  
 Median :-0.0386  
 Mean   : 0.1271  
 3rd Qu.: 0.8402  
 Max.   : 2.9196  
> 
> 
> proc.time()
   user  system elapsed 
  14.43    0.56   14.95 
